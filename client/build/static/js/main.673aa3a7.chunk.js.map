{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","pages/CuentaConfirmada/index.js","pages/RecuperacionContrase√±a/index.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","context/proyectos/proyectoReducer.js","types/index.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","pages/Profile/index.js","App.js","serviceWorker.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","useState","forgotPassword","setforgotPassword","errorMessage","setErrorMessage","checkEmail","setCheckEmail","loadingAxiosReq","setloadingAxiosReq","useEffect","history","push","msg","categoria","email","password","usuario","guardarUsuario","onChange","e","target","name","value","toggleForgotPassword","handleCheckEmail","a","preventDefault","axios","get","then","res","data","objData","id","_id","post","alert","window","location","href","catch","err","console","log","handleSubmit","response","localStorage","setItem","token","error","message","className","onSubmit","htmlFor","type","placeholder","style","textAlign","color","fontSize","marginTop","onClick","cursor","to","NuevaCuenta","registrarUsuario","nombre","referente","status","confirmar","trim","match","index","this","params","put","Component","setState","state","passw","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","tareaContext","Proyecto","proyectoActual","obtenerTareas","ListadoProyectos","proyectos","obtenerProyectos","length","TransitionGroup","map","CSSTransition","key","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","action","payload","filter","clienteAxios","create","baseURL","process","REACT_APP_BACKEND_URL","ProyectoState","useReducer","proyectoReducer","dispatch","resultado","proyectoId","delete","Provider","children","TareaState","TareaReducer","tareas","AlertaState","alertaReducer","setTimeout","payloadEmail","payloadNombre","payloadId","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","iniciarSesion","RutaPrivada","component","render","cerrarSession","clear","isLoading","validatedUser","scrollTo","accessString","Authorization","Error","marginLeft","height","role","aria-label","toUpperCase","App","exact","path","Profile","CuentaConfirmada","RecuperacionCuenta","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.673aa3a7.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst alertaContext = createContext();\n\nexport default alertaContext;","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AlertaContext from \"../../context/alertas/alertaContext\";\nimport AuthContext from \"../../context/autenticacion/authContext\";\nimport axios from \"axios\";\n\nconst Login = (props) => {\n  // extraer los valores del context\n  const alertaContext = useContext(AlertaContext);\n  const { alerta, mostrarAlerta } = alertaContext;\n\n  const authContext = useContext(AuthContext);\n  const { mensaje, autenticado } = authContext;\n  //   const { mensaje, autenticado, iniciarSesion } = authContext;\n\n  const [forgotPassword, setforgotPassword] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [checkEmail, setCheckEmail] = useState(\"\");\n  const [loadingAxiosReq, setloadingAxiosReq] = useState(false);\n\n  // En caso de que el password o usuario no exista\n  useEffect(() => {\n    if (autenticado) {\n      props.history.push(\"/proyectos\");\n    }\n\n    if (mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    }\n    // eslint-disable-next-line\n  }, [mensaje, autenticado, props.history]);\n\n  // State para iniciar sesi√≥n\n  const [usuario, guardarUsuario] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  // extraer de usuario\n  const { email, password } = usuario;\n\n  const onChange = (e) => {\n    guardarUsuario({\n      ...usuario,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  //Toggle olvido contrase√±a\n  const toggleForgotPassword = () => {\n    setforgotPassword(!forgotPassword);\n    setErrorMessage(\"\");\n  };\n\n  //Chequea si email existe en base de datos\n  const handleCheckEmail = async (e) => {\n    e.preventDefault();\n    if (checkEmail === \"\") {\n      setErrorMessage(\"Debe ingresar su correo!\");\n      return;\n    }\n\n    setloadingAxiosReq(true);\n    await axios\n      .get(\"/check_email/\" + checkEmail)\n      .then(async (res) => {\n        if (res.data === \"\") {\n          setloadingAxiosReq(false);\n          return setErrorMessage(\"Esta cuenta no existe!\");\n        } else {\n          setloadingAxiosReq(false);\n          let objData = {\n            email: res.data.email,\n            id: res.data._id,\n          };\n\n          await axios\n            .post(\"correo_recuperar_ps\", objData)\n            .then(() => {\n              alert(\"Por favor revise su correo\");\n              window.location.href = \"/\";\n            })\n            .catch((err) => console.log(err));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"/login_user\", {\n        email,\n        password,\n      });\n      localStorage.setItem(\"JWT\", response.data.token);\n      //   localStorage.setItem(\"STATUS\", response.data.user.status);\n      window.location.href = \"/profile\";\n    } catch (error) {\n      console.error(error);\n      setErrorMessage(error.response.data.message);\n    }\n  };\n\n  return (\n    <div className=\"form-usuario\">\n      {alerta ? (\n        <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>\n      ) : null}\n\n      <div className=\"contenedor-form sombra-dark\">\n        <h1>Iniciar Sesi√≥n</h1>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"campo-form\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Tu Email\"\n              value={email}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Tu Password\"\n              value={password}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <input\n              type=\"submit\"\n              className=\"btn btn-primario btn-block\"\n              value=\"Iniciar Sesi√≥n\"\n            />\n          </div>\n        </form>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"red\",\n            fontSize: \"16px\",\n            marginTop: \"15px\",\n          }}\n        >\n          {errorMessage}\n        </p>\n        <p\n          onClick={toggleForgotPassword}\n          style={{\n            textAlign: \"center\",\n            marginTop: \"20px\",\n            cursor: \"pointer\",\n            color: \"blue\",\n          }}\n        >\n          Olvido su contrase√±a?\n          {forgotPassword ? (\n            <span\n              onClick={toggleForgotPassword}\n              className=\"hide-forgot-password\"\n            >\n              {\" \"}\n              ocultar\n            </span>\n          ) : null}\n        </p>\n\n        {forgotPassword ? (\n          <form className=\"forgotPasswordForm\" onSubmit={handleCheckEmail}>\n            <input\n              className=\"campo-form btn-block\"\n              type=\"email\"\n              name=\"checkEmail\"\n              id=\"checkEmail\"\n              placeholder=\"Ingrese el email asociado con su cuenta\"\n              onChange={(e) => setCheckEmail(e.target.value)}\n            />\n            {loadingAxiosReq ? (\n              <button className=\"newPassword-submit-btn\" color=\"warning\">\n                Verificando...\n              </button>\n            ) : (\n              <button\n                className=\"text-center btn btn-recuperar-password btn-block\"\n                color=\"warning\"\n              >\n                Solicitar nueva contrase√±a\n              </button>\n            )}\n          </form>\n        ) : null}\n\n        <Link to={\"/nueva-cuenta\"} className=\"enlace-cuenta\">\n          Obtener Cuenta\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AlertaContext from \"../../context/alertas/alertaContext\";\nimport AuthContext from \"../../context/autenticacion/authContext\";\n\nconst NuevaCuenta = (props) => {\n  // extraer los valores del context\n  const alertaContext = useContext(AlertaContext);\n  const { alerta, mostrarAlerta } = alertaContext;\n\n  const authContext = useContext(AuthContext);\n  const { mensaje, autenticado, registrarUsuario } = authContext;\n\n  // En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\n  useEffect(() => {\n    if (autenticado) {\n      props.history.push(\"/proyectos\");\n    }\n\n    if (mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    }\n    // eslint-disable-next-line\n  }, [mensaje, autenticado, props.history]);\n\n  // State para iniciar sesi√≥n\n  const [usuario, guardarUsuario] = useState({\n    nombre: \"\",\n    referente: \"\",\n    status: 0,\n    email: \"\",\n    password: \"\",\n    confirmar: \"\",\n  });\n\n  // extraer de usuario\n  const { nombre, referente, email, password, confirmar, status } = usuario;\n\n  const onChange = (e) => {\n    guardarUsuario({\n      ...usuario,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Cuando el usuario quiere iniciar sesi√≥n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // Validar que no haya campos vacios\n    if (\n      nombre.trim() === \"\" ||\n      referente.trim() === \"\" ||\n      email.trim() === \"\" ||\n      password.trim() === \"\" ||\n      confirmar.trim() === \"\"\n    ) {\n      mostrarAlerta(\"Todos los campos son obligatorios\", \"alerta-error\");\n      return;\n    }\n\n    // Password entre 8 y 15 caracteres, una Mayuscula y una minuscula\n    const passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,15}$/;\n    if (!password.match(passw)) {\n      mostrarAlerta(\n        \"El password debe ser de al menos 8 caracteres con una mayuscula letras y numeros\",\n        \"alerta-error\"\n      );\n      return;\n    }\n\n    // Los 2 passwords son iguales\n    if (password !== confirmar) {\n      mostrarAlerta(\"Los passwords no son iguales\", \"alerta-error\");\n      return;\n    }\n\n    // Pasarlo al action\n    registrarUsuario({\n      nombre,\n      referente,\n      status,\n      email,\n      password,\n    });\n\n    // alert(\"Por favor revise su correo\");\n\n    // window.location.href = \"/\";\n  };\n\n  return (\n    <div className=\"form-usuario\">\n      {alerta ? (\n        <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>\n      ) : null}\n      <div className=\"contenedor-form sombra-dark\">\n        <h1>Crear una cuenta</h1>\n\n        <form onSubmit={onSubmit}>\n          <div className=\"campo-form\">\n            <label htmlFor=\"nombre\">Nombre</label>\n            <input\n              type=\"text\"\n              id=\"nombre\"\n              name=\"nombre\"\n              placeholder=\"Tu Nombre\"\n              value={nombre}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"campo-form\">\n            <label htmlFor=\"nombre\">Referente</label>\n            <input\n              type=\"text\"\n              id=\"referente\"\n              name=\"referente\"\n              placeholder=\"Nombre Referente\"\n              value={referente}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Tu Email\"\n              value={email}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Tu Password\"\n              value={password}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <label htmlFor=\"confirmar\">Confirmar Password</label>\n            <input\n              type=\"password\"\n              id=\"confirmar\"\n              name=\"confirmar\"\n              placeholder=\"Repite tu Password\"\n              value={confirmar}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className=\"campo-form\">\n            <input\n              type=\"submit\"\n              className=\"btn btn-primario btn-block\"\n              value=\"Realizar Registro\"\n            />\n          </div>\n        </form>\n\n        <Link to={\"/\"} className=\"enlace-cuenta\">\n          Volver a Iniciar Sesi√≥n\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NuevaCuenta;\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\n\r\nclass index extends Component {\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    await axios\r\n      .put(\"/validated_email/\" + id, { status: 1 })\r\n      .then(() => localStorage.setItem(\"STATUS\", 1))\r\n      .catch((err) => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"validacion-container\">\r\n        <div className=\"contenedor-form sombra-dark\">\r\n          <h2>Cuenta Validada Satisfactoriamente!</h2>\r\n          <Link to={\"/\"} className=\"text-center btn btn-primario btn-block\">\r\n            Haga click aqui para ingresar\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default index;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\n\r\nclass index extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      password: \"\",\r\n      confirmar: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!this.state.password || !this.state.confirmar) {\r\n      return alert(\"Ingrese la informacion en los campos requeridos\");\r\n    }\r\n    // Password entre 8 y 15 caracteres, una Mayuscula y una minuscula\r\n    const passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,15}$/;\r\n    if (!this.state.password.match(passw)) {\r\n      alert(\r\n        \"El password debe ser de al menos 8 caracteres y contener una letra mayuscula y un numero\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (this.state.password !== this.state.confirmar) {\r\n      return alert(\"Passwords no coinciden\");\r\n    }\r\n    const id = this.props.match.params.id;\r\n    await axios\r\n      .put(\"/change_password/\" + id, { password: this.state.password })\r\n      .then(() => {\r\n        alert(\"Actualizacion de cuenta exitosa! \\n Ya puede ingresar\")(\r\n          (window.location.href = \"/\")\r\n        );\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"validacion-container\">\r\n        <div className=\"contenedor-form sombra-dark\">\r\n          <h2>Ingrese nueva contrase√±a</h2>\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"campo-form\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Tu Password\"\r\n                value={this.state.password}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"campo-form\">\r\n              <label htmlFor=\"confirmar\">Confirmar Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmar\"\r\n                name=\"confirmar\"\r\n                placeholder=\"Repite tu Password\"\r\n                value={this.state.confirmar}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"campo-form\">\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-primario btn-block\"\r\n                value=\"Realizar Registro\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default index;\r\n","import { createContext } from 'react';\n\nconst proyectoContext = createContext();\n\nexport default proyectoContext;","import React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n\n    // Obtener el state del formulario\n    const proyectosContext = useContext(proyectoContext);\n    const { formulario, errorformulario,  mostrarFormulario, agregarProyecto, mostrarError } = proyectosContext;\n\n\n    // State para Proyecto\n    const [proyecto, guardarProyecto] = useState({\n        nombre: ''\n    });\n\n    // Extraer nombre de proyecto\n    const {¬†nombre } = proyecto;\n\n    // Lee los contenidos del input\n    const onChangeProyecto = e => {\n        guardarProyecto({\n            ...proyecto,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Cuando el usuario envia un proyecto\n    const onSubmitProyecto = e => {\n        e.preventDefault();\n\n        // Validar el proyecto\n        if(nombre === '') {\n            mostrarError();\n            return;\n        }\n\n        // agregar al state\n        agregarProyecto(proyecto)\n\n        // Reiniciar el form\n        guardarProyecto({\n            nombre: ''\n        })\n    }\n\n    // Mostrar el formulario\n    const onClickFormulario = () => {\n        mostrarFormulario();\n    }\n\n    return ( \n        <Fragment>\n            <button \n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={ onClickFormulario }\n            >Nuevo Proyecto</button>\n\n            { formulario ? \n                    (\n                        <form\n                            className=\"formulario-nuevo-proyecto\"\n                            onSubmit={onSubmitProyecto}\n                        >\n                            <input \n                                type=\"text\"\n                                className=\"input-text\"\n                                placeholder=\"Nombre Proyecto\"\n                                name=\"nombre\"\n                                value={nombre}\n                                onChange={onChangeProyecto}\n                            />\n\n                            <input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value=\"Agregar Proyecto\"\n                            />\n\n                        </form>\n                ) : null }\n\n            { errorformulario ? <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p>  : null }\n        </Fragment>\n     );\n}\n \nexport default NuevoProyecto;","import { createContext } from 'react';\n\nconst tareaContext = createContext();\n\nexport default tareaContext;","import React, { useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst Proyecto = ({proyecto}) => {\n    // Obtener el state de proyectos\n    const proyectosContext = useContext(proyectoContext);\n    const { proyectoActual } = proyectosContext;\n\n    // obtener la funci√≥n del context de tarea\n    const tareasContext = useContext(tareaContext);\n    const { obtenerTareas } = tareasContext;\n\n    // Funci√≥n para agregar el proyecto actual\n    const seleccionarProyecto = id => {\n        proyectoActual(id); // Fijar un proyecto actual\n        obtenerTareas(id); // Filtrar las tareas cuando se de click\n    }\n\n    return ( \n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={ () => seleccionarProyecto(proyecto._id) }\n            >{proyecto.nombre} </button>\n        </li>\n     );\n}\n \nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\nimport Proyecto from './Proyecto';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport { TransitionGroup, CSSTransition¬†} from 'react-transition-group';\n\nconst ListadoProyectos = () => {\n\n    // Extrar proyectos de state inicial\n    const proyectosContext = useContext(proyectoContext);\n    const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\n\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    // Obtener proyectos cuando carga el componente\n    useEffect(() => {\n        // si hay un error\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n\n        obtenerProyectos();\n        // eslint-disable-next-line\n    }, [mensaje]);\n\n    // revisar si proyectos tiene contenido\n    if(proyectos.length === 0 ) return <p>No hay proyectos, comienza creando uno</p>;\n\n    return ( \n\n        <ul className=\"listado-proyectos\">\n            \n        \n            { alerta   ? ( <div className={`alerta ${alerta.categoria} `}>{alerta.msg}</div>  ) : null  }\n\n\n            <TransitionGroup>\n                {proyectos.map(proyecto => (\n                    <CSSTransition\n                        key={proyecto._id}\n                        timeout={200}\n                        classNames=\"proyecto\"\n                    >\n                        <Proyecto \n                            proyecto={proyecto}\n                        />\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n        </ul>\n     );\n}\n \nexport default ListadoProyectos;","import React from 'react';\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\n\nconst Sidebar = () => {\n    return ( \n        <aside>\n            <h1>MERN<span>Tasks</span></h1>\n\n            <NuevoProyecto />\n\n            <div className=\"proyectos\">\n                <h2>Tus Proyectos</h2>\n                <ListadoProyectos />\n            </div>\n        </aside>\n     );\n}\n \nexport default Sidebar;","import React, {useContext, useEffect} from 'react';\nimport AuthContext from '../../context/autenticacion/authContext';\n\n\nconst Barra = () => {\n\n    // Extraer la informaci√≥n de autenticaci√≥n\n    const authContext = useContext(AuthContext);\n    const { usuario, usuarioAutenticado, cerrarSesion  } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, []);\n\n\n\n    return ( \n        <header className=\"app-header\">\n            {usuario ? <p className=\"nombre-usuario\">Hola <span>{usuario.nombre} </span> </p> : null}\n            \n\n            <nav className=\"nav-principal\">\n                <button \n                    className=\"btn btn-blank cerrar-sesion\"\n                    onClick={() => cerrarSesion() }\n                >Cerrar Sesi√≥n</button>\n            </nav>\n        </header>\n     );\n}\n \nexport default Barra;","import React, { useContext, useState, useEffect } from 'react';  \nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = () => {\n\n    // Extrar si un proyecto esta activo\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    // obtener la funci√≥n del context de tarea\n    const tareasContext = useContext(tareaContext);\n    const { tareaseleccionada,  errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea } = tareasContext;\n\n    // Effect que detecta si hay una tarea seleccionada\n    useEffect(() => {\n        if(tareaseleccionada !== null) {\n            guardarTarea(tareaseleccionada)\n        } else {\n            guardarTarea({\n                nombre: ''\n            })\n        }\n    }, [  tareaseleccionada]); \n\n    // State del formulario\n    const [tarea, guardarTarea] = useState({\n        nombre: ''\n    })\n\n    // extraer el nombre del proyecto\n    const { nombre } = tarea;\n\n    // Si no hay proyecto seleccionado\n    if(!proyecto) return null;\n\n    // Array destructuring para extraer el proyecto actual\n    const [proyectoActual] =  proyecto;\n\n    // Leer los valores del formulario\n    const handleChange = e => {\n        guardarTarea({\n            ...tarea,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // validar\n        if(nombre.trim() === '' ) {\n            validarTarea();\n            return;\n        }\n\n        // Si es edici√≥n o si es nueva tarea\n        if(tareaseleccionada === null ) {\n            // agregar la nueva tarea al state de tareas\n            tarea.proyecto = proyectoActual._id;\n            agregarTarea(tarea);\n        } else {\n            // actualizar tarea existente\n            actualizarTarea(tarea);\n\n            // Elimina tareaseleccionada del state\n            limpiarTarea();\n        }\n        // Obtener y filtrar las tareas del proyecto actual\n        obtenerTareas(proyectoActual.id);\n\n        // reiniciar el form\n        guardarTarea({\n            nombre: ''\n        })\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input \n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre Tarea...\"\n                        name=\"nombre\"\n                        value={nombre}\n                        onChange={handleChange}\n                    />\n                </div>\n\n                <div className=\"contenedor-input\">\n                    <input \n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\n                    />\n                </div>\n            </form>\n\n            {errortarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null }\n        </div>\n     );\n}\n \nexport default FormTarea;","import React, { useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst Tarea = ({tarea}) => {\n\n    // Extrar si un proyecto esta activo\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    // obtener la funci√≥n del context de tarea\n    const tareasContext = useContext(tareaContext);\n    const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual } = tareasContext;\n\n\n    // Extraer el proyecto\n    const [proyectoActual] = proyecto;\n \n    // Funci√≥n que se ejecuta cuando el usuario presiona el btn de eliminar tarea\n    const tareaEliminar = id => {\n        eliminarTarea(id, proyectoActual._id);\n        obtenerTareas(proyectoActual.id)\n    }\n\n    // Funci√≥n que modifica el estado de las tareas\n    const cambiarEstado = tarea => {\n        if(tarea.estado) {\n            tarea.estado = false;\n        } else {\n            tarea.estado = true\n        }\n        actualizarTarea(tarea);\n    }\n\n    // Agrega una tarea actual cuando el usuario desea editarla\n    const seleccionarTarea = tarea => {\n        guardarTareaActual(tarea);\n    }\n\n    return ( \n        <li className=\"tarea sombra\">\n            <p>{tarea.nombre} </p>\n\n            <div className=\"estado\">\n                {tarea.estado \n                ?  \n                    (\n                        <button\n                            type=\"button\"\n                            className=\"completo\"\n                            onClick={() => cambiarEstado(tarea)}\n                        >Completo</button>\n                    )\n                : \n                    (\n                        <button\n                            type=\"button\"\n                            className=\"incompleto\"\n                            onClick={() => cambiarEstado(tarea)}\n                        >Incompleto</button>\n                    )\n                }\n            </div>\n\n            <div className=\"acciones\">\n                <button \n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => seleccionarTarea(tarea) }\n                >Editar</button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={() => tareaEliminar(tarea._id)}\n                >Eliminar</button>\n            </div>\n        </li>\n     );\n}\n \nexport default Tarea;","import React, { Fragment, useContext} from 'react';\nimport Tarea from './Tarea';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ListadoTareas = () => {\n\n    // Extrar proyectos de state inicial\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto, eliminarProyecto } = proyectosContext;\n\n    // obtener las tareas del proyecto\n    const tareasContext = useContext(tareaContext);\n    const { tareasproyecto } = tareasContext;\n\n    // Si no hay proyecto seleccionado\n    if(!proyecto) return <h2>Selecciona un proyecto</h2>;\n\n    // Array destructuring para extraer el proyecto actual\n    const [proyectoActual] =  proyecto;\n\n    // Elimina un proyecto\n    const onClickEliminar = () => {\n        eliminarProyecto(proyectoActual._id)\n    }\n\n    return ( \n        <Fragment>\n            <h2>Proyecto: {proyectoActual.nombre} </h2>\n\n            <ul className=\"listado-tareas\">\n                {tareasproyecto.length === 0 \n                    ? (<li className=\"tarea\"><p>No hay tareas</p></li>) \n                    : \n                    <TransitionGroup>\n                    {tareasproyecto.map(tarea => (\n                        <CSSTransition\n                            key={tarea.id}\n                            timeout={200}\n                            classNames=\"tarea\"\n                        >\n                            <Tarea \n                                tarea={tarea}\n                            />\n                        </CSSTransition>\n                    ))}\n                    </TransitionGroup>\n                }\n            </ul>\n\n            <button     \n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={onClickEliminar}\n            >Eliminar Proyecto &times;</button>\n        </Fragment>\n     );\n}\n \nexport default ListadoTareas;","import React, { useContext, useEffect } from 'react';\nimport Sidebar from '../layout/Sidebar';\nimport Barra from '../layout/Barra';\nimport FormTarea from '../tareas/FormTarea';\nimport ListadoTareas from '../tareas/ListadoTareas';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Proyectos = () => {\n\n    // Extraer la informaci√≥n de autenticaci√≥n\n    const authContext = useContext(AuthContext);\n    const { usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, [])\n\n    return ( \n        <div className=\"contenedor-app\">\n            <Sidebar />\n\n            <div className=\"seccion-principal\">\n                <Barra />\n\n                <main>\n                    <FormTarea />\n\n                    <div className=\"contenedor-tareas\">\n                        <ListadoTareas />\n                    </div>\n                </main>\n            </div>\n        </div>\n     );\n}\n \nexport default Proyectos;","import { \n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types';\n\n\nexport default (state, action) => {\n    switch(action.type) {\n        case FORMULARIO_PROYECTO:\n            return {\n                ...state,\n                formulario: true\n            }\n        case OBTENER_PROYECTOS:\n            return {\n                ...state,\n                proyectos: action.payload\n            }\n        case AGREGAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: [...state.proyectos, action.payload],\n                formulario: false,\n                errorformulario: false\n            }\n        case VALIDAR_FORMULARIO:\n            return {\n                ...state, \n                errorformulario: true\n            }\n        case PROYECTO_ACTUAL:\n            return {\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload )\n            }\n        case ELIMINAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload ),\n                proyecto: null\n            }\n        case PROYECTO_ERROR:\n            return {\n                ...state,\n                mensaje: action.payload\n            }\n        default:\n            return state;\n    }\n}","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO'\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS'\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\n\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESION = 'CERRAR_SESION';","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import React, { useReducer } from 'react';\n\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { \n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\n\n\nconst ProyectoState = props => {\n\n    const initialState = {\n        proyectos : [],\n        formulario : false,\n        errorformulario: false,\n        proyecto: null, \n        mensaje: null\n    }\n\n    // Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\n\n    // Serie de funciones para el CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    // Obtener los proyectos\n    const obtenerProyectos = async () => {\n        try {\n            const resultado = await clienteAxios.get('/api/proyectos');\n\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Agregar nuevo proyecto\n    const agregarProyecto = async proyecto => {\n\n        try {\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n            console.log(resultado);\n            // Insertar el proyecto en el state\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Valida el formulario por errores\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    } \n\n    // Selecciona el Proyecto que el usuario dio click\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n\n    // Elimina un proyecto\n    const eliminarProyecto = async proyectoId => {\n        try {\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: proyectoId\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto,\n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n        \n    )\n}\n\nexport default ProyectoState;","import {¬†\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case TAREAS_PROYECTO:\n            return {\n                ...state,\n                tareasproyecto: action.payload\n            }\n        case AGREGAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: [action.payload, ...state.tareasproyecto],\n                errortarea: false\n            }\n        case VALIDAR_TAREA:\n            return {\n                ...state,\n                errortarea: true\n            }\n        case ELIMINAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload )\n            }\n        case ACTUALIZAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea )\n            }\n        case TAREA_ACTUAL:\n            return {\n                ...state,\n                tareaseleccionada: action.payload\n            }\n        case LIMPIAR_TAREA:\n            return {\n                ...state,\n                tareaseleccionada: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\n\nimport {¬†\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props => {\n    const initialState = {\n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null\n    }\n\n    // Crear dispatch y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    // Crear las funciones\n\n    // Obtener las tareas de un proyecto\n    const obtenerTareas = async proyecto => {\n\n        console.log(proyecto);\n\n        try {\n            const resultado = await clienteAxios.get('/api/tareas', { params: { proyecto }});\n            console.log(resultado);\n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Agregar una tarea al proyecto seleccionado\n    const agregarTarea = async tarea => {\n        console.log(tarea);\n        try {\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\n            console.log(resultado);\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: tarea\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Valida y muestra un error en caso de que sea necesario\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n        })\n    }\n\n    // Eliminar tarea por id\n    const eliminarTarea = async (id, proyecto) => {\n        try {\n            await clienteAxios.delete(`/api/tareas/${id}`, { params: { proyecto }});\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Edita o modifica una tarea\n    const actualizarTarea = async tarea => {\n\n        try {\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n            \n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Extrae una tarea para edici√≥n\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n\n\n    // Elimina la tareaseleccionada\n    const limpiarTarea = () => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                tareasproyecto : state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n            }}\n        >\n            {props.children}\n        </TareaContext.Provider>\n    )\n}\n\nexport default TareaState;","import {¬†MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport alertaReducer from './alertaReducer';\nimport alertaContext from './alertaContext';\n\nimport {¬†MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    }\n\n    const [ state, dispatch ] = useReducer(alertaReducer, initialState);\n\n    // Funciones\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: ¬†MOSTRAR_ALERTA,\n            payload: {\n                msg, \n                categoria\n            }\n        });\n\n        // Despu√©s de 5 segundos limpiar la alerta\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n\n    return (\n        <alertaContext.Provider\n            value={{\n                alerta: state.alerta,\n                mostrarAlerta\n            }}\n        > \n            {props.children}\n        </alertaContext.Provider>\n    )\n}\n\nexport default AlertaState;","import {\n  REGISTRO_EXITOSO,\n  REGISTRO_ERROR,\n  OBTENER_USUARIO,\n  LOGIN_EXITOSO,\n  LOGIN_ERROR,\n  CERRAR_SESION,\n} from \"../../types\";\nimport axios from \"axios\";\n\nexport default async (state, action) => {\n  switch (action.type) {\n    case REGISTRO_EXITOSO:\n      let objData = {\n        email: action.payloadEmail,\n        nombre: action.payloadNombre,\n        id: action.payloadId,\n      };\n\n      await axios\n        .post(\"/correo\", objData)\n        .then((res) => console.log(res))\n        .catch((err) => console.log(err));\n      return {\n        ...state,\n        // autenticado: true,\n        mensaje: null,\n        // cargando: false,\n      };\n\n    case LOGIN_EXITOSO:\n      localStorage.setItem(\"token\", action.payload.token);\n\n      return {\n        ...state,\n        autenticado: true,\n        mensaje: null,\n        cargando: false,\n      };\n\n    case OBTENER_USUARIO:\n      return {\n        ...state,\n        autenticado: true,\n        usuario: action.payload,\n        cargando: false,\n      };\n    case CERRAR_SESION:\n    case LOGIN_ERROR:\n    case REGISTRO_ERROR:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        usuario: null,\n        autenticado: null,\n        mensaje: action.payload,\n        cargando: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import clienteAxios from './axios';\n\nconst tokenAuth = token => {\n    if(token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;","import React, { useReducer } from \"react\";\nimport AuthContext from \"./authContext\";\nimport AuthReducer from \"./authReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport tokenAuth from \"../../config/token\";\n\nimport {\n  REGISTRO_EXITOSO,\n  REGISTRO_ERROR,\n  OBTENER_USUARIO,\n  LOGIN_EXITOSO,\n  LOGIN_ERROR,\n  CERRAR_SESION,\n} from \"../../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    autenticado: null,\n    usuario: null,\n    mensaje: null,\n    cargando: true,\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const registrarUsuario = async (datos) => {\n    try {\n      const respuesta = await clienteAxios.post(\"/api/usuarios\", datos);\n      // console.log(respuesta);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data,\n        payloadEmail: respuesta.data.email,\n        payloadNombre: respuesta.data.nombre,\n        payloadId: respuesta.data.id,\n      });\n\n      alert(\"Por favor revise su correo\");\n      window.location.href = \"/\";\n      // Obtener el usuario\n      // usuarioAutenticado();\n    } catch (error) {\n      // console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: \"alerta-error\",\n      };\n\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta,\n      });\n    }\n  };\n\n  // Retorna el usuario autenticado\n  const usuarioAutenticado = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      tokenAuth(token);\n    }\n\n    try {\n      const respuesta = await clienteAxios.get(\"/api/auth\");\n      console.log(respuesta);\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: respuesta.data.usuario,\n      });\n    } catch (error) {\n      console.log(error.response);\n      dispatch({\n        type: LOGIN_ERROR,\n      });\n    }\n  };\n\n  // Cuando el usuario inicia sesi√≥n\n  const iniciarSesion = async (datos) => {\n    try {\n      const respuesta = await clienteAxios.post(\"/api/auth\", datos);\n      console.log(respuesta);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: respuesta.data,\n      });\n\n      // Obtener el usuario\n      usuarioAutenticado();\n    } catch (error) {\n      console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: \"alerta-error\",\n      };\n\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: alerta,\n      });\n    }\n  };\n\n  // Cierra la sesi√≥n del usuario\n  const cerrarSesion = () => {\n    dispatch({\n      type: CERRAR_SESION,\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        autenticado: state.autenticado,\n        usuario: state.usuario,\n        mensaje: state.mensaje,\n        cargando: state.cargando,\n        registrarUsuario,\n        iniciarSesion,\n        usuarioAutenticado,\n        cerrarSesion,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\nexport default AuthState;\n","import React, { useContext, useEffect } from 'react';\nimport {¬†Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst RutaPrivada = ({ component: Component, ...props ¬†}) => {\n\n    const authContext = useContext(AuthContext);\n    const { autenticado, cargando, usuarioAutenticado¬†} = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, []);\n\n    return ( \n        <Route { ...props } render={ props => !autenticado && !cargando ?  (\n            <Redirect to=\"/\" />\n        )  : (\n            <Component {...props} />\n        ) } />\n\n     );\n}\n \nexport default RutaPrivada;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nclass index extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      isLoading: true,\r\n      error: false,\r\n      validatedUser: false,\r\n      nombre: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    const accessString = localStorage.getItem(\"JWT\");\r\n    if (accessString === null) {\r\n      this.setState({\r\n        isLoading: false,\r\n        error: true,\r\n      });\r\n    }\r\n\r\n    axios\r\n      .get(\"/profile\", {\r\n        headers: { Authorization: `JWT ${accessString}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.status === \"error\") {\r\n          this.setState({\r\n            error: true,\r\n            isLoading: false,\r\n          });\r\n          throw new Error(res.data.message);\r\n        }\r\n        if (res.data.status === 1) {\r\n          this.setState({\r\n            validatedUser: true,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n          error: false,\r\n          nombre: res.data.nombre,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  cerrarSession = () => {\r\n    localStorage.clear();\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, error } = this.state;\r\n    if (error) {\r\n      return (\r\n        <div\r\n          style={{\r\n            marginLeft: \"10%\",\r\n            fontSize: \"30px\",\r\n            height: \"100vh\",\r\n            marginTop: \"120px\",\r\n          }}\r\n        >\r\n          ...Problema al tratar de ingresar, trate de login de nuevo\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            üôÑ\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <button>\r\n            <Link className=\"text-center\" to=\"/\">\r\n              Home\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    if (isLoading) {\r\n      return (\r\n        <div\r\n          style={{\r\n            marginLeft: \"10%\",\r\n            fontSize: \"30px\",\r\n            height: \"100vh\",\r\n            marginTop: \"120px\",\r\n          }}\r\n        >\r\n          Cargando Informacion...\r\n        </div>\r\n      );\r\n    }\r\n    if (!this.state.validatedUser) {\r\n      return (\r\n        <div className=\"verificandoCuenta-container\">\r\n          Su cuenta no ha sido verificada. <br /> Revise su correo para mas\r\n          informacion.\r\n          <br />\r\n          <br />{\" \"}\r\n          <Link className=\"text-center\" to=\"/\">\r\n            <button>&#8592; Volver a inicio</button>\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"perfil-container\">\r\n        <h2 className=\"perfil-title\">\r\n          Bienvenido {this.state.nombre.toUpperCase()}\r\n        </h2>{\" \"}\r\n        <hr />\r\n        <h4 className=\"text-center\">Contenido por definir</h4>\r\n        <button onClick={this.cerrarSession}>Cerrar Session</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default index;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport NuevaCuenta from \"./components/auth/NuevaCuenta\";\nimport CuentaConfirmada from \"./pages/CuentaConfirmada\";\nimport RecuperacionCuenta from \"./pages/RecuperacionContrase√±a\";\nimport Proyectos from \"./components/proyectos/Proyectos\";\n\nimport ProyectoState from \"./context/proyectos/proyectoState\";\nimport TareaState from \"./context/tareas/tareaState\";\nimport AlertaState from \"./context/alertas/alertaState\";\nimport AuthState from \"./context/autenticacion/authState\";\nimport tokenAuth from \"./config/token\";\nimport RutaPrivada from \"./components/rutas/RutaPrivada\";\nimport Profile from \"./pages/Profile\";\n\n// Revisar si tenemos un token\nconst token = localStorage.getItem(\"token\");\nif (token) {\n  tokenAuth(token);\n}\n\nfunction App() {\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n                <Route exact path=\"/profile\" component={Profile} />\n                <Route\n                  exact\n                  path=\"/validated_email/:id\"\n                  component={CuentaConfirmada}\n                />\n                <Route\n                  exact\n                  path=\"/recupera_cuenta/:id\"\n                  component={RecuperacionCuenta}\n                />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}